@using Microsoft.AspNetCore.Identity
@model User 
@inject ShortenerBip.Helper.DataContext dc

@inject UserManager<User> UserManager
@inject SignInManager<User> SignManeger

@{
    var alreadyExists = false;
    if (Model != null)
    {
        alreadyExists = (dc.Users.Any(x => x.AccountId == Model.AccountId));
    }
}

@{
    ViewData["Title"] = "Register";
}


<h2>@ViewData["Title"]</h2>


<div class="row">
    <div class="col-md-4">           
        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
            <h4>Create a new account.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="AccountId"></label>
                <input asp-for="AccountId" class="form-control" />
            </div>      
            <button type="submit" class="btn btn-default">Register</button>
        </form>
        @if (alreadyExists)
        {
            <a>User name @Model.AccountId is already taken.</a>
        }  
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
